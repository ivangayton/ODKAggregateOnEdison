#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Fri Feb 12 14:14:21 2016
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "\]0;ivan@Ivan-MBP: ~/Documents/git/ODKAggregateOnEdison/installation_scriptivan@Ivan-MBP:~/Documents/git/ODKAggregateOnEdison/installation_script\$ "
send -- "./set	"
expect -exact "up"
send -- "."
expect -exact ". \r"
send -- "	"
expect -exact "sh "
send -- "\r"
expect -exact "\r
Please enter the local wifi network name:\r
"
send -- "Kaede-net\r"
expect -exact "Kaede-net\r
Please enter the local wifi password:\r
"
send -- "plumpynut\r"
expect -exact "plumpynut\r
Please tell me what hostname you would like to give your server:\r
"
send -- "buendia-edison\r"
expect -exact "buendia-edison\r
I'm afraid you're going to have to give me root access if you want me to flash the Edison. You may be asked to enter your sudo password at some point during this installation\r
Password for user ivan: "
send -- "poink\r"
expect -exact "\r
\r
launching the ubilinux install script\r
Using U-Boot target: edison-blankcdc\r
Now waiting for dfu device 8087:0a99\r
Please plug and reboot the board\r
Flashing IFWI\r
##################################################\] finished!\r
##################################################\] finished!\r
Flashing U-Boot\r
##################################################\] finished!\r
Flashing U-Boot Environment\r
##################################################\] finished!\r
Flashing U-Boot Environment Backup\r
##################################################\] finished!\r
Rebooting to apply partition changes\r
Now waiting for dfu device 8087:0a99\r
Flashing boot partition (kernel)\r
##################################################\] finished!\r
Flashing rootfs, (it can take up to 10 minutes... Please be patient)\r
##################################################\] finished!\r
Rebooting\r
U-boot & Kernel System Flash Success...\r
Your board needs to reboot to complete the flashing procedure, please do not unplug it for 2 minutes.\r
flashing seems to be done.\r
Waiting 2 minutes for the Edison to be ready before installing more stuff\r
ubilinux install script finished and we have waited 2 minutes\r
removing\r
/home/ivan/.ssh/known_hosts updated.\r
Original contents retained as /home/ivan/.ssh/known_hosts.old\r
Attempting to place an ssh key on the Edison to allow root access.\r
Username: ivan (on Ivan-MBP)\r
>> root@192.168.2.15\r
root@192.168.2.15's password: "
send -- "edison\r"
expect -exact "\r
Connection closed by 192.168.2.15\r\r
<< 255\r
\]0;ivan@Ivan-MBP: ~/Documents/git/ODKAggregateOnEdison/installation_scriptivan@Ivan-MBP:~/Documents/git/ODKAggregateOnEdison/installation_script\$ "
send -- ""
expect eof
